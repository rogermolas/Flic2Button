{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface FlicButtonPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n  getButtons(): Promise<{ buttons: { buttonId: string; name: string; state: number }[] }>;\n  isScanning(): Promise<{ scanning: boolean }>;\n  scanForButtons(): Promise<void>;\n  connectButton(options: { buttonId: string }): Promise<{ message: string }>;\n  disconnectButton(options: { buttonId: string }): Promise<{ message: string }>;\n  removeAllButtons(): Promise<{ message: string }>;\n\n  addListener<T = any>(\n    eventName: string,\n    listenerFunc: (data: T) => void\n  ): PluginListenerHandle;\n  \n}\n"]}